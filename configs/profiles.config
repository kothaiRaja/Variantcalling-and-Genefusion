profiles {

  // ===== Singularity base =====
  singularity {
    singularity.enabled    = true
    singularity.autoMounts = true
    singularity.pullAuto   = true
    singularity.cacheDir   = "${System.env.HOME}/singularity_containers"
    docker.enabled = false
    podman.enabled = false
    shifter.enabled = false
    charliecloud.enabled = false
  }

  // ===== Local development =====
  local {
    includes = ['singularity']
    process.executor = 'local'
    workDir          = "${baseDir}/work"
    params.resultsdir= "${baseDir}/results"
  }

  // ===== Test profile =====
  test {
    includes = ['local']
    process.cpus   = 2
    process.memory = '4 GB'
    params {
      ref_base  = "${baseDir}/test_data"
      test_mode = true
    }
  }

  // ===== SLURM cluster =====
  slurm {
    includes = ['singularity']

    process.executor     = 'slurm'
    process.queue        = 'LocalQ'
     process.beforeScript = '''
    module load singularity || true
    mkdir -p /scratch/cache/tmp/$USER
  '''

    // work & results dirs on scratch
    workDir           = "${System.env.SCRATCH ?: '/scratch'}/nf_work/${System.env.USER}"
    params.resultsdir = "${System.env.SCRATCH ?: '/scratch'}/nf_results/${System.env.USER}"

    // singularity cache on scratch
    singularity.cacheDir   = "/scratch/containers"
	singularity.autoMounts = true
    singularity.runOptions = "--cleanenv -B /scratch/cache/tmp/${System.env.USER} --env TMPDIR=/scratch/cache/tmp/${System.env.USER}"

    executor {
      name            = 'slurm'
      queueSize       = 10
      submitRateLimit = '20/1min'
    }

    // -------------------------
    // Default resources & labels
    // -------------------------
    process {
   cpus = 4
   maxRetries = 3
  
  errorStrategy = { task.exitStatus in [137,140,143,247,271,273,255] ? 'retry' : 'terminate' }

 
  memory = {
    (task.exitStatus == 137 && task.attempt > 1)
      ? (task.attempt > 2 ? '36 GB' : '24 GB')   
      : '16 GB'                                   
  }

  time = {
    task.attempt > 2 ? '72h' : (task.attempt > 1 ? '48h' : '24h')
  }

      withLabel: 'process_low' {
        cpus = 2; memory = '8 GB'; time = '4h'
      }
      withLabel: 'process_medium' {
        cpus = 6; memory = '36 GB'; time = '8h'
      }
      withLabel: 'process_high' {
        cpus = 12; memory = '64 GB'; time = '24h'
      }
      withLabel: 'process_very_high' {
        cpus = 16; memory = '96 GB'; time = '48h'
      }
    }

    // -------------------------
    // Per-process adjustments
    // -------------------------

    // Light / non-Java tools
    withName: 'FASTQC_RAW'           { clusterOptions = "--job-name=fastqc --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/fastqc_%j.out --error=${params.resultsdir}/logs/fastqc_%j.err" }
    withName: 'TRIM_READS'           { clusterOptions = "--job-name=fastp --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/fastp_%j.out --error=${params.resultsdir}/logs/fastp_%j.err" }
    withName: 'STAR_ALIGNMENT'       { clusterOptions = "--job-name=star --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/star_%j.out --error=${params.resultsdir}/logs/star_%j.err" }
    withName: 'SAMTOOLS_SORT_INDEX'  { clusterOptions = "--job-name=samtools_sort --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/samtools_sort_%j.out --error=${params.resultsdir}/logs/samtools_sort_%j.err" }
    withName: 'SAMTOOLS_FILTER_ORPHANS' { clusterOptions = "--job-name=samtools_filter_orphans --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/samtools_filter_orphans_%j.out --error=${params.resultsdir}/logs/samtools_filter_orphans_%j.err" }
    withName: 'SAMTOOLS_STATS'       { clusterOptions = "--job-name=samtools_stats --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/samtools_stats_%j.out --error=${params.resultsdir}/logs/samtools_stats_%j.err" }
    withName: 'SAMTOOLS_FLAGSTAT'    { clusterOptions = "--job-name=samtools_flagstat --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/samtools_flagstat_%j.out --error=${params.resultsdir}/logs/samtools_flagstat_%j.err" }
    withName: 'MERGE_BAMS'           { clusterOptions = "--job-name=mergebams --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/mergebams_%j.out --error=${params.resultsdir}/logs/mergebams_%j.err" }
    withName: 'RESET_READGROUPS'     { clusterOptions = "--job-name=addrg --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/addrg_%j.out --error=${params.resultsdir}/logs/addrg_%j.err" }
    withName: 'SAMTOOLS_CALMD'       { clusterOptions = "--job-name=calmd --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/calmd_%j.out --error=${params.resultsdir}/logs/calmd_%j.err" }
    withName: 'BCFTOOLS_STATS'       { clusterOptions = "--job-name=bcftools_stats --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/bcftools_stats_%j.out --error=${params.resultsdir}/logs/bcftools_stats_%j.err" }
    withName: 'BCFTOOLS_QUERY'       { clusterOptions = "--job-name=bcftools_query --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/bcftools_query_%j.out --error=${params.resultsdir}/logs/bcftools_query_%j.err" }
    withName: 'BGZIP_TABIX_ANNOTATIONS' { clusterOptions = "--job-name=bgzip_tabix --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/bgzip_tabix_%j.out --error=${params.resultsdir}/logs/bgzip_tabix_%j.err" }
    withName: 'VCF2MAF'              { clusterOptions = "--job-name=vcf2maf --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/vcf2maf_%j.out --error=${params.resultsdir}/logs/vcf2maf_%j.err" }
    withName: 'MAF_VISUALIZATION'    { clusterOptions = "--job-name=maftools_vis --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/maftools_vis_%j.out --error=${params.resultsdir}/logs/maftools_vis_%j.err" }
    withName: 'ARRIBA'               { clusterOptions = "--job-name=arriba --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/arriba_%j.out --error=${params.resultsdir}/logs/arriba_%j.err" }
    withName: 'ARRIBA_VISUALIZATION' { clusterOptions = "--job-name=arriba_vis --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/arriba_vis_%j.out --error=${params.resultsdir}/logs/arriba_vis_%j.err" }
    withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' { clusterOptions = "--job-name=versions --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/versions_%j.out --error=${params.resultsdir}/logs/versions_%j.err" }
    withName: 'MultiQC'              { clusterOptions = "--job-name=multiqc --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/multiqc_%j.out --error=${params.resultsdir}/logs/multiqc_%j.err" }

    // Java-heavy
    withName: 'GATK_MARK_DUPLICATES' {
  cpus = 8; memory = 64.GB; time = '24h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=markdup --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/markdup_%j.out --error=${params.resultsdir}/logs/markdup_%j.err"
}


    withName: 'SPLIT_NCIGAR_READS' {
  cpus = 8; memory = 36.GB; time = '24h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=splitncigar --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/splitncigar_%j.out --error=${params.resultsdir}/logs/splitncigar_%j.err"
}


    withName: 'GATK_BASERECALIBRATOR' {
  cpus = 8; memory = 48.GB; time = '24h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=baserecal --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/baserecal_%j.out --error=${params.resultsdir}/logs/baserecal_%j.err"
}


    withName: 'GATK_APPLYBQSR' {
  cpus = 6; memory = 36.GB; time = '24h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=applybqsr --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/applybqsr_%j.out --error=${params.resultsdir}/logs/applybqsr_%j.err"
}


    withName: 'GATK_HAPLOTYPE_CALLER' {
  cpus = 8; memory = 48.GB; time = '24h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=haplotypecaller --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/haplotypecaller_%j.out --error=${params.resultsdir}/logs/haplotypecaller_%j.err"
}


    withName: 'GATK_MERGEVCFS' {
  cpus = 4; memory = 16.GB; time = '12h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=gatk_mergevcfs --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/gatk_mergevcfs_%j.out --error=${params.resultsdir}/logs/gatk_mergevcfs_%j.err"
}

withName: 'GATK_VARIANT_FILTER' {
  cpus = 4; memory = 16.GB; time = '12h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=variant_filter --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/variant_filter_%j.out --error=${params.resultsdir}/logs/variant_filter_%j.err"
}

withName: 'GATK_VARIANT_SELECT_FILTER' {
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR            = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=variant_select_filter --nodelist=rbctsrv02 " +
                   "--output=${params.resultsdir}/logs/variant_select_filter_%j.out " +
                   "--error=${params.resultsdir}/logs/variant_select_filter_%j.err"
}

withName: 'COLLECT_VARIANT_CALLING_METRICS' {
  cpus = 2
  memory = 16.GB
  time = '8h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=collect_metrics --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/collect_metrics_%j.out --error=${params.resultsdir}/logs/collect_metrics_%j.err"
}



withName: 'ANNOTATE_VARIANTS' {   
  cpus = 4; memory = 12.GB; time = '12h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  env.JAVA_TOOL_OPTIONS = '-Djava.io.tmpdir=tmp'
  clusterOptions = "--job-name=snpeff --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/snpeff_%j.out --error=${params.resultsdir}/logs/snpeff_%j.err"
}

withName: 'ANNOTATEVARIANTS_VEP' {
  cpus = 8; memory = 48.GB; time = '24h'
  beforeScript = 'module load singularity || true; mkdir -p tmp'
  env.TMPDIR   = 'tmp'
  clusterOptions = "--job-name=vep --nodelist=rbctsrv02 --output=${params.resultsdir}/logs/vep_%j.out --error=${params.resultsdir}/logs/vep_%j.err"
}

  }
}

// ========================== Logging & Reports ==========================
trace.enabled = true
trace.overwrite = true
trace.file = "${params.resultsdir}/trace.txt"

log.level = 'INFO'

timeline.enabled = true
timeline.overwrite = true
timeline.file = "${params.resultsdir}/timeline.html"

report.enabled = true
report.overwrite = true
report.file = "${params.resultsdir}/report.html"

dag.enabled = true
dag.overwrite = true
dag.file = "${params.resultsdir}/dag.png"
